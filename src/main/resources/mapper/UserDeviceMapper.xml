<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mimidai.dao.UserDeviceDao">

	<sql id="selectSql">
		select
			id as 'id',
			user_id as 'userId',
			imei as 'imei',
			imsi as 'imsi',
			model as 'model',
			brand as 'brand',
			create_time as 'createTime',
			update_time as 'updateTime',
			login_count as 'loginCount',
			contact_upload as 'contactUpload',
			idfa as idfa
		from 
			user_device
	</sql>
	<sql id="whereSql">
		<where>
			<if test="userId != null  "> and user_id = #{userId}</if>
			<if test="imei != null and imei !='' "> and imei = #{imei}</if>
			<if test="model != null and model!='' "> and model = #{model}</if>
		</where>
	</sql>
	
	<select id="findAll" resultType="com.mimidai.entity.UserDevice">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
	</select>
	
	<select id="findByUserIdAndImeiAndImsi" resultType="com.mimidai.entity.UserDevice">
		<include refid="selectSql"/>
		where
			user_id = #{userId}
		and 
			imei = #{imei}
		and
			imsi = #{imsi}
		ORDER BY id DESC
		limit 1
	</select>
	
	<select id="findTwoOldByUserId" resultType="com.mimidai.entity.UserDevice">
		<include refid="selectSql"/>
		where
			user_id = #{userId}
		order by id 
		limit 2
	</select>
	
	<select id="findAllByUserId" resultType="java.util.HashMap">
		select
			ud.imei as 'imei',
			ud.model as 'model',
			ud.brand as 'brand',
			ud.create_time as 'createTime',
			ud.update_time as 'updateTime',
			sum(ud.login_count) as 'useCount'
		from
			user_device ud
		where
			ud.user_id = #{userId}
		group by
			ud.imei
	</select>
	
	<select id="findAllByUserId2" resultType="java.util.HashMap">
		select
			ud.imei as 'imei',
			sum(ud.login_count) as 'useCount'
		from
			user_device ud
		where
			ud.user_id = #{userId}
		group by
			ud.imei
	</select>
	
	<select id="findAllSameDeviceByUserId" resultType="java.util.HashMap">
		select 
			ui.name as 'name',
			ui.idcard as 'idcard',
			ui.user_id as 'userId',
			u.info_state as 'userInfoState',
			u.audit_state as 'userAuditState',
			count(la.id) as 'refuseTimes',
			count(l.id) as 'loanTimes',
			sum(case r.state WHEN '1' then 0 else 1 end) as 'remainTimes',
			sum(l.amount) as 'amount',
			sum(l.remain_amount) as 'remainAmount',
			sum(r.repay_total) as 'overTotal',
			sum(r.overdue) as 'overdue',
			count(r.id) as 'overTimes'
		from user_info ui 
			left join loan_apply la on ( ui.user_id=la.user_id  and la.state = '4')
			left join loan l on(l.user_id = ui.user_id)
			left join user u on(u.id = ui.user_id)
			left join repay r on(r.loan_id = l.id and r.overdue > 0)
		where 
			ui.user_id in(select user_id from user_device where user_id != #{userId} and imei in (SELECT imei from user_device where user_id=#{userId}) GROUP BY user_id)
			and u.audit_state in ('3','4')
		group by 
			ui.user_id;
	</select>
	
	<select id="findAllSameDeviceByUserIds" resultType="java.util.HashMap">
		select 
			ui.name as 'name',
			ui.idcard as 'idcard',
			ui.user_id as 'userId',
			u.info_state as 'userInfoState',
			u.audit_state as 'userAuditState',
			count(la.id) as 'refuseTimes',
			count(l.id) as 'loanTimes',
			sum(case r.state WHEN '1' then 0 else 1 end) as 'remainTimes',
			sum(l.amount) as 'amount',
			sum(l.remain_amount) as 'remainAmount',
			sum(r.repay_total) as 'overTotal',
			sum(r.overdue) as 'overdue',
			count(r.id) as 'overTimes'
		from user_info ui 
			left join loan_apply la on ( ui.user_id=la.user_id  and la.state = '4')
			left join loan l on(l.user_id = ui.user_id)
			left join user u on(u.id = ui.user_id)
			left join repay r on(r.loan_id = l.id and r.overdue > 0)
		where 
			ui.user_id in(${userIds})
			and u.audit_state in ('3','4')
		group by 
			ui.user_id;
	</select>
	 
	<select id="findCountSimByUserId" resultType="Integer">
		select count(distinct imsi) from user_device where user_id=#{userId};
	</select>
	
	<select id="findCountDeviceByUserId" resultType="Integer">
		select count(distinct imei) from user_device where user_id=#{userId};
	</select>
	
	<select id="findCountSimByImei" resultType="Integer">
		select count(distinct imsi) from user_device where imei=#{imei};
	</select>
	
	<select id="findSumLoginCountByUserIdAndImei" resultType="Integer">
		select sum(login_count) from user_device where imei = #{imei} and user_id = #{userId};
	</select>
	
	<select id="findSumLoginCountByUserId" resultType="Integer">
		select sum(login_count) from user_device where user_id = #{userId};
	</select>
	
	<select id="findNewByUserId" resultType="com.mimidai.entity.UserDevice">
		<include refid="selectSql"></include>
		where user_id = #{userId} and contact_upload='1' order by id desc limit 1
	</select>
	
	<select id="findLastestLoginByUserId" resultType="com.mimidai.entity.UserDevice">
		<include refid="selectSql"></include>
		where user_id = #{userId} order by update_time desc limit 1
	</select>
	
	<select id="findAllUserIdByUserIdAndImeis" resultType="com.mimidai.entity.UserDevice">
		select user_id as 'userId' from user_device where user_id != #{userId} and imei in (${imeis}) GROUP BY user_id
	</select>
	
	<select id="findAllImeisByUserId" resultType="com.mimidai.entity.UserDevice">
		select imei  as 'imei' from user_device where user_id = #{userId} 
	</select>

	<select id="findCountByUserId" resultType="Integer">
		select count(*) from user_device where user_id = #{userId}
	</select>
	

</mapper> 
